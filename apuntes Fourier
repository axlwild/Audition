Problema 3:
Muestreo de 1024 
Como está espejeado 512 
Como la muestra es de 24000
cada muestra es de 93.75 Hz(?) aproximadamente.


Problema 4:
Cuando la señal no es periódica:

Suponemos que nuestra señal tiene un periodo del tamaño de la señal.
La función tiene que comenzar y terminar con valores no discontinuos.
O sea... Tiene que empezar y terminar en el mismo valor y(t) 
y(tf) = y(ti) para que funcione.

Porque si no... En la frecuencia se crea una sinc para representar la discontinuidad.
Y a esto se le llama Frequency Bleed Over y se debe de evitar.


Para hacer continuos los puntos iniciales y finales de la señal.
Forma popular: Multiplicando punto a punto a la señal por la función Hann.

w(t) = 0.5 (1-cos(2PIt/(T-1)))

Si se le agrega dos ventaneos de Hann se sobrelaparía para evitar un efecto de cambio en
la señal.


Resolución tiempo vs resolución ventanas.



Fast Fourier Transform. (FFTw3)
FFTw3 -> Implementación de FFTw3 implementada en C.


Para que la aceleración de FFTw3 funciones, es esencial que el
tamaño de la ventana sea una potencia de 2:

T = 2^x
1024 y 2038 satisfacen esta condición.





XKSD



in_fft[i] *= std:: exp(-M_I *(double)*2*M_PI*freqs[i]*delay)



************************************************************
*						9000							   *
************************************************************

********************************
*				4096		   *
********************************
					*			*
					********************************
					*				4096		   *
					********************************
					*			*
					*	1024	*